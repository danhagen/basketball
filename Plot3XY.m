function [] = Plot3XY(GoodTrialNumber,FairTrialNumber,PoorTrialNumber)
%   Input 3 trial numbers from the 100k trials and this function will
%   return a plot of the three trials plotted in the endpoint space. Be
%   sure to have all 100 Loop Number .mat files in your current folder.
%   Assumes a height of 71 inches. 
%   Detailed explanation goes here

    % Check number of inputs.
    if nargin > 3
        error('myfuns:Plot3XY:TooManyInputs', ...
            'requires 3 inputs');
    end
    if nargin == 2
        error('myfuns:Plot3XY:NotEnoughInputs', ...
            'requires 3 inputs or default 0 inputs');
    end
    if nargin == 1
        error('myfuns:Plot3XY:NotEnoughInputs', ...
            'requires 3 inputs or default 0 inputs');
    end
    if nargin == 0
        GoodTrialNumber = 90773;
    end    
    
    TrialNumber = [GoodTrialNumber FairTrialNumber PoorTrialNumber];
    Color = ['b' 'g' 'r'];
    HeightInches = 71;
    Height = HeightInches*2.54;
    ShoulderToElbowLength = .186*Height;
    ForearmLength = .146*Height;
    HandLength = .108*Height;
    figure;
        for i = 1:3
            LoopNumber = sum(TrialNumber(i)-[0:1000:100000]>0);
            TrialNumber(i) = TrialNumber(i) - (LoopNumber-1)*1000;
            FileName = ['.\LoopNumberTrials\LoopNumber' num2str(LoopNumber) '.mat'];
            load(FileName, 'Angle1SplineStructures','Angle2SplineStructures',...
                'Angle3SplineStructures','Time');
            Angle1 = ppval(Angle1SplineStructures(TrialNumber(i)),Time);
            Angle2 = ppval(Angle2SplineStructures(TrialNumber(i)),Time);
            Angle3 = ppval(Angle3SplineStructures(TrialNumber(i)),Time);
            XFunction = @(Angle1,Angle2,Angle3) ShoulderToElbowLength*sin(Angle1)+ForearmLength*sin(Angle1 + Angle2)+HandLength*sin(Angle1 + Angle2 - Angle3); % in cm
            YFunction = @(Angle1,Angle2,Angle3) -ShoulderToElbowLength*cos(Angle1)-ForearmLength*cos(Angle1 + Angle2)-HandLength*cos(Angle1 + Angle2 - Angle3); % in cm
            TrialX = XFunction(Angle1,Angle2,Angle3);
            TrialY = YFunction(Angle1,Angle2,Angle3);

            plot(TrialX,TrialY,'Color',Color(i),'LineWidth',2); hold on; alpha(0.8);
            Angle=0:0.01:2*pi; 
            XCircle=5*cos(Angle);
            YCircle=5*sin(Angle);
            plot(XCircle,YCircle,'k','LineWidth',2);
            line(   [0 ...
                    ShoulderToElbowLength*sin(Angle1(1))...
                    ShoulderToElbowLength*sin(Angle1(1))+ForearmLength*sin(Angle1(1)+Angle2(1))...
                    ShoulderToElbowLength*sin(Angle1(1))+ForearmLength*sin(Angle1(1)+Angle2(1))+HandLength*sin(Angle1(1)+Angle2(1)-Angle3(1))],...
                    [0 ...
                    -ShoulderToElbowLength*cos(Angle1(1))...
                    -ShoulderToElbowLength*cos(Angle1(1))-ForearmLength*cos(Angle1(1)+Angle2(1))...
                    -ShoulderToElbowLength*cos(Angle1(1))-ForearmLength*cos(Angle1(1)+Angle2(1))-HandLength*cos(Angle1(1)+Angle2(1)-Angle3(1))],...
                    'Color','k','LineWidth',2,'Marker','o','MarkerFaceColor','w'); 
            line(   [0 ...
                    ShoulderToElbowLength*sin(Angle1(end))...
                    ShoulderToElbowLength*sin(Angle1(end))+ForearmLength*sin(Angle1(end)+Angle2(end))...
                    ShoulderToElbowLength*sin(Angle1(end))+ForearmLength*sin(Angle1(end)+Angle2(end))+HandLength*sin(Angle1(end)+Angle2(end)-Angle3(end))],...
                    [0 ...
                    -ShoulderToElbowLength*cos(Angle1(end))...
                    -ShoulderToElbowLength*cos(Angle1(end))-ForearmLength*cos(Angle1(end)+Angle2(end))...
                    -ShoulderToElbowLength*cos(Angle1(end))-ForearmLength*cos(Angle1(end)+Angle2(end))-HandLength*cos(Angle1(end)+Angle2(end)-Angle3(end))],...
                    'Color','k','LineWidth',2,'Marker','o','MarkerFaceColor','w'); 
            xlabel('x (cm)','FontName','AvantGarde');
            ylabel('y (cm)','FontName','AvantGarde');
            set(gca,'TickDir',      'out',...
                    'TickLength',   [0.02 0.02],...
                    'XTick',        -20:20:60,...
                    'YTick',        -60:20:60,...
                    'XColor',       [.3 .3 .3],...
                    'YColor',       [.3 .3 .3],...
                    'LineWidth',        1,...
                    'box',          'off');
            hold on;
        end
        axis equal
        xlim([-20 60]);
        ylim([-60 60]);
        set(gcf,'PaperPositionMode','auto');
        hold off;
end